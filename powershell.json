{
	/*
		// Place your snippets for PowerShell here. Each snippet is defined under a snippet name and has a prefix, body and 
		// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
		// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
		// same ids are connected.
		// Example:
		"Print to console": {
			"prefix": "log",
			"body": [
				"console.log('$1');",
				"$2"
			],
			"description": "Log output to console"
		}
	*/
		"Cmdlet (advanced function) - complete": {
			"prefix": "cmdlet",
			"body": [
				"function ${0:Verb-Noun}",
				"{",
				"",
				"    <#",
				"    .SYNOPSIS",
				"        Short description",
				"    .DESCRIPTION",
				"        Long description",
				"    .EXAMPLE",
				"        Example of how to use this cmdlet",
				"    .EXAMPLE",
				"        Another example of how to use this cmdlet",
				"    .INPUTS",
				"        Inputs to this cmdlet (if any)",
				"    .OUTPUTS",
				"        Output from this cmdlet (if any)",
				"    .NOTES",
				"        General notes",
				"    .COMPONENT",
				"        The component this cmdlet belongs to",
				"    .ROLE",
				"        The role this cmdlet belongs to",
				"    .FUNCTIONALITY",
				"        The functionality that best describes this cmdlet",
				"    #>",
				"",
				"    [CmdletBinding(DefaultParameterSetName='Parameter Set 1',",
				"        SupportsShouldProcess,",
				"        PositionalBinding,",
				"        HelpUri = 'http://www.microsoft.com/',",
				"        ConfirmImpact='Medium')]",
				"    [Alias()]",
				"    [OutputType([String])]",
				"    Param",
				"    (",
				"        # Param1 help description",
				"        [Parameter(Mandatory, ",
				"            ValueFromPipeline,",
				"            ValueFromPipelineByPropertyName, ",
				"            ValueFromRemainingArguments, ",
				"            Position=0,",
				"            ParameterSetName='Parameter Set 1')]",
				"        [ValidateNotNull()]",
				"        [ValidateNotNullOrEmpty()]",
				"        [ValidateCount(0,5)]",
				"        [ValidateSet(\"sun\", \"moon\", \"earth\")]",
				"        [Alias(\"p1\")] ",
				"        [String]\\$Param1,",
				"",
				"        # Param2 help description",
				"        [Parameter(ParameterSetName='Parameter Set 1')]",
				"        [AllowNull()]",
				"        [AllowEmptyCollection()]",
				"        [AllowEmptyString()]",
				"        [ValidateScript({\\$true})]",
				"        [ValidateRange(0,5)]",
				"        [int]\\$Param2,",
				"",
				"        # Param3 help description",
				"        [Parameter(ParameterSetName='Another Parameter Set')]",
				"        [ValidatePattern(\"[a-z]*\")]",
				"        [ValidateLength(0,15)]",
				"        [String]\\$Param3",
				"    )",
				"",
				"    Begin",
				"    {",
				"    }",
				"    Process",
				"    {",
				"        if (\\$pscmdlet.ShouldProcess(\"Target\", \"Operation\"))",
				"        {",
				"        }",
				"    }",
				"    End",
				"    {",
				"    }",
				"}"
			],
			"description": "Cmdlet (advanced function) - complete"
		}
	}